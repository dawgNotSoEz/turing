import React, { useState, useEffect, useRef } from 'react';

// === SVG ICONS ===
const CodeIcon = (props) => (
  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" {...props}>
    <polyline points="16 18 22 12 16 6"></polyline>
    <polyline points="8 6 2 12 8 18"></polyline>
  </svg>
);

const ShieldCheckIcon = (props) => (
  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" {...props}>
    <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path><path d="m9 12 2 2 4-4"></path>
  </svg>
);

const BookOpenIcon = (props) => (
  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" {...props}>
    <path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path><path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path>
  </svg>
);

const TrophyIcon = (props) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" {...props}><path d="M6 9H4.5a2.5 2.5 0 0 1 0-5H6"/><path d="M18 9h1.5a2.5 2.5 0 0 0 0-5H18"/><path d="M4 22h16"/><path d="M10 14.66V17c0 .55-.47.98-.97 1.21C7.85 18.75 7 20.24 7 22"/><path d="M14 14.66V17c0 .55.47.98.97 1.21C16.15 18.75 17 20.24 17 22"/><path d="M18 2H6v7a6 6 0 0 0 12 0V2Z"/></svg>
);

const UsersIcon = (props) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" {...props}><path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"/><circle cx="9" cy="7" r="4"/><path d="M22 21v-2a4 4 0 0 0-3-3.87"/><path d="M16 3.13a4 4 0 0 1 0 7.75"/></svg>
);

const ZapIcon = (props) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" {...props}><polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"/></svg>
);

const GithubIcon = (props) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" {...props}><path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"/></svg>
);

const StarIcon = (props) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" {...props}><polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"/></svg>
);

const BotIcon = (props) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" {...props}><path d="M12 8V4H8"/><rect width="16" height="12" x="4" y="8" rx="2"/><path d="M2 14h2"/><path d="M20 14h2"/><path d="M15 13v2"/><path d="M9 13v2"/></svg>
);

const DiscordIcon = (props) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor" {...props}>
        <path d="M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0 12.64 12.64 0 0 0-.617-1.25.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057 19.9 19.9 0 0 0 5.993 3.03.078.078 0 0 0 .084-.028c.462-.63.874-1.295 1.226-1.994a.076.076 0 0 0-.041-.106 13.107 13.107 0 0 1-1.872-.892.077.077 0 0 1-.008-.128 10.2 10.2 0 0 0 .372-.292.074.074 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127 12.299 12.299 0 0 1-1.873.892.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028 19.839 19.839 0 0 0 6.002-3.03.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.956-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.955-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.946 2.418-2.157 2.418z"/>
    </svg>
);

const CalendarIcon = (props) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" {...props}>
        <rect x="3" y="4" width="18" height="18" rx="2" ry="2"/>
        <line x1="16" y1="2" x2="16" y2="6"/>
        <line x1="8" y1="2" x2="8" y2="6"/>
        <line x1="3" y1="10" x2="21" y2="10"/>
    </svg>
);

const AwardIcon = (props) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" {...props}>
        <circle cx="12" cy="8" r="7"/>
        <polyline points="8.21 13.89 7 23 12 20 17 23 15.79 13.88"/>
    </svg>
);

// === Custom Hook for Scroll Animations ===
const useScrollAnimation = () => {
    const ref = useRef(null);
    const [isVisible, setIsVisible] = useState(false);

    useEffect(() => {
        const observer = new IntersectionObserver(
            ([entry]) => {
                if (entry.isIntersecting) {
                    setIsVisible(true);
                    observer.unobserve(entry.target);
                }
            },
            {
                threshold: 0.1,
                rootMargin: '50px'
            }
        );

        if (ref.current) {
            observer.observe(ref.current);
        }

        return () => {
            if (ref.current) {
                observer.unobserve(ref.current);
            }
        };
    }, []);

    return [ref, isVisible];
};

// === Parallax Effect Hook ===
const useParallax = () => {
    const [offset, setOffset] = useState(0);

    useEffect(() => {
        const handleScroll = () => {
            setOffset(window.pageYOffset * 0.5);
        };

        window.addEventListener('scroll', handleScroll);
        return () => window.removeEventListener('scroll', handleScroll);
    }, []);

    return offset;
};

// === MAIN APP COMPONENT ===
export default function App() {
    return (
        <>
            {/* Global styles for animations */}
            <style>{`
                @keyframes float {
                    0% { transform: translateY(0px); opacity: 0.5; }
                    50% { transform: translateY(-20px); opacity: 1; }
                    100% { transform: translateY(0px); opacity: 0.5; }
                }
                .float-animation {
                    animation: float 6s ease-in-out infinite;
                }
                .fade-in-up {
                    animation: fadeInUp 0.8s ease-out forwards;
                }
                @keyframes fadeInUp {
                    from {
                        opacity: 0;
                        transform: translateY(30px);
                    }
                    to {
                        opacity: 1;
                        transform: translateY(0);
                    }
                }
                .pop-in {
                    animation: popIn 0.6s cubic-bezier(0.68, -0.55, 0.27, 1.55) forwards;
                }
                @keyframes popIn {
                    from {
                        opacity: 0;
                        transform: scale(0.8);
                    }
                    to {
                        opacity: 1;
                        transform: scale(1);
                    }
                }
                .gradient-text {
                    background: linear-gradient(135deg, #06b6d4, #3b82f6, #8b5cf6);
                    -webkit-background-clip: text;
                    -webkit-text-fill-color: transparent;
                    background-clip: text;
                }
            `}</style>
            <div className="bg-gray-900 text-gray-200 font-sans antialiased min-h-screen">
                <Header />
                <main>
                    <HeroSection />
                    <AboutSection />
                    <ChallengeSection />
                    <BotSection />
                    <GamificationSection />
                    <DomainSection />
                    <CommunitySection />
                    <TeamSection />
                    <JoinSection />
                </main>
                <Footer />
            </div>
        </>
    );
}

// === LAYOUT COMPONENTS ===
const Header = () => {
    const [isMenuOpen, setIsMenuOpen] = useState(false);

    const navLinks = [
        { href: "#about", text: "About" },
        { href: "#challenges", text: "Challenges" },
        { href: "#domains", text: "Domains" },
        { href: "#community", text: "Community" },
        { href: "#team", text: "Team" },
        { href: "/bot", text: "Discord Bot", external: true },
    ];

    const discordInviteLink = "https://discord.gg/your-invite-link"; // Replace with actual invite

    return (
        <header className="sticky top-0 z-50 bg-gray-900/80 backdrop-blur-sm border-b border-gray-800 shadow-lg">
            <div className="container mx-auto px-6 py-4 flex justify-between items-center">
                <a href="#" className="flex items-center gap-3 group">
                    <div className="w-10 h-10 bg-gradient-to-br from-cyan-500 to-blue-600 rounded-full flex items-center justify-center transform group-hover:scale-110 transition-transform duration-300 glow-on-hover">
                        <CodeIcon className="w-6 h-6 text-white" />
                    </div>
                    <span className="text-xl font-bold text-white group-hover:text-cyan-400 transition-colors duration-300">Turing Community</span>
                </a>
                
                <nav className="hidden md:flex space-x-6 items-center">
                    {navLinks.map(link => (
                         <a key={link.text} href={link.href} target={link.external ? "_blank" : undefined} rel={link.external ? "noopener noreferrer" : undefined} className={`text-gray-300 hover:text-cyan-400 transition-colors duration-300 ${link.external ? 'flex items-center gap-1' : ''}`}>
                            {link.text}
                            {link.external && <BotIcon className="w-4 h-4" />}
                         </a>
                    ))}
                    <a href={discordInviteLink} target="_blank" rel="noopener noreferrer" className="bg-gradient-to-r from-cyan-500 to-blue-600 hover:from-cyan-600 hover:to-blue-700 text-white font-bold py-2 px-4 rounded-lg transition-all duration-300 transform hover:scale-105 flex items-center gap-2">
                        <DiscordIcon className="w-4 h-4" />
                        Join Discord
                    </a>
                </nav>
                
                <button className="md:hidden text-white z-50" onClick={() => setIsMenuOpen(!isMenuOpen)}>
                    {isMenuOpen ? (
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    ) : (
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><line x1="3" y1="12" x2="21" y2="12"></line><line x1="3" y1="6" x2="21" y2="6"></line><line x1="3" y1="18" x2="21" y2="18"></line></svg>
                    )}
                </button>
            </div>
            
            {/* Mobile Menu */}
            <div className={`fixed inset-0 bg-gray-900/95 backdrop-blur-lg z-40 transform ${isMenuOpen ? 'translate-x-0' : 'translate-x-full'} transition-transform duration-300 ease-in-out md:hidden`}>
                <nav className="flex flex-col items-center justify-center h-full space-y-8">
                    {navLinks.map(link => (
                         <a key={link.text} href={link.href} target={link.external ? "_blank" : undefined} rel={link.external ? "noopener noreferrer" : undefined} className={`text-2xl text-gray-200 hover:text-cyan-400 transition-colors ${link.external ? 'flex items-center gap-2' : ''}`} onClick={() => setIsMenuOpen(false)}>
                            {link.text}
                            {link.external && <BotIcon className="w-6 h-6" />}
                         </a>
                    ))}
                     <a href={discordInviteLink} target="_blank" rel="noopener noreferrer" className="mt-4 bg-gradient-to-r from-cyan-500 to-blue-600 hover:from-cyan-600 hover:to-blue-700 text-white font-bold py-3 px-6 rounded-lg transition-colors text-xl flex items-center gap-2" onClick={() => setIsMenuOpen(false)}>
                        <DiscordIcon className="w-5 h-5" />
                        Join Discord
                    </a>
                </nav>
            </div>
        </header>
    );
};

const Footer = () => {
    return (
        <footer className="bg-gray-900 border-t border-gray-800">
            <div className="container mx-auto px-6 py-8">
                <div className="grid md:grid-cols-4 gap-8 mb-8">
                    <div className="md:col-span-2">
                        <div className="flex items-center gap-3 mb-4">
                            <div className="w-8 h-8 bg-gradient-to-br from-cyan-500 to-blue-600 rounded-full flex items-center justify-center">
                                <CodeIcon className="w-5 h-5 text-white" />
                            </div>
                            <span className="text-lg font-bold text-white">Turing Community</span>
                        </div>
                        <p className="text-gray-400 mb-4 max-w-md">
                            A Discord-based community where students learn, grow, and code together. 
                            Join us for weekly challenges, collaborative projects, and skill development.
                        </p>
                        <div className="flex space-x-4">
                            <a href="https://github.com/turing-community" target="_blank" rel="noopener noreferrer" className="text-gray-400 hover:text-cyan-400 transition-colors">
                                <GithubIcon className="w-5 h-5" />
                            </a>
                            <a href="https://discord.gg/your-invite-link" target="_blank" rel="noopener noreferrer" className="text-gray-400 hover:text-cyan-400 transition-colors">
                                <DiscordIcon className="w-5 h-5" />
                            </a>
                        </div>
                    </div>
                    
                    <div>
                        <h4 className="text-white font-semibold mb-4">Quick Links</h4>
                        <ul className="space-y-2 text-gray-400">
                            <li><a href="#challenges" className="hover:text-cyan-400 transition-colors">Weekly Challenges</a></li>
                            <li><a href="#domains" className="hover:text-cyan-400 transition-colors">Domains</a></li>
                            <li><a href="#community" className="hover:text-cyan-400 transition-colors">Community</a></li>
                            <li><a href="#team" className="hover:text-cyan-400 transition-colors">Team</a></li>
                            <li><a href="/bot" target="_blank" rel="noopener noreferrer" className="hover:text-cyan-400 transition-colors flex items-center gap-1">
                                Discord Bot <BotIcon className="w-3 h-3" />
                            </a></li>
                        </ul>
                    </div>
                    
                    <div>
                        <h4 className="text-white font-semibold mb-4">Resources</h4>
                        <ul className="space-y-2 text-gray-400">
                            <li><a href="#" className="hover:text-cyan-400 transition-colors">Guidelines</a></li>
                            <li><a href="#" className="hover:text-cyan-400 transition-colors">Study Materials</a></li>
                            <li><a href="#" className="hover:text-cyan-400 transition-colors">Past Challenges</a></li>
                            <li><a href="#" className="hover:text-cyan-400 transition-colors">Documentation</a></li>
                        </ul>
                    </div>
                </div>
                
                <div className="border-t border-gray-800 pt-8 text-center text-gray-500">
                    <p>&copy; {new Date().getFullYear()} Turing Community. All rights reserved.</p>
                    <p className="text-sm mt-2">Built with passion by the community, for the community.</p>
                </div>
            </div>
        </footer>
    );
};

// === Animated Section Wrapper ===
const AnimatedSection = ({ children, className, id }) => {
    const [ref, isVisible] = useScrollAnimation();
    return (
        <section id={id} ref={ref} className={`${className} transition-opacity duration-1000 ${isVisible ? 'opacity-100' : 'opacity-0'}`}>
            {children}
        </section>
    );
};

// === PAGE SECTIONS ===
const HeroSection = () => {
    const parallaxOffset = useParallax();
    
    return (
        <section className="relative py-24 md:py-40 bg-gray-900 overflow-hidden">
            {/* Animated Background Shapes */}
            <div className="absolute inset-0 z-0 opacity-30" style={{ transform: `translateY(${parallaxOffset}px)` }}>
                <div className="absolute top-1/4 left-1/4 w-32 h-32 bg-gradient-to-r from-cyan-400 to-blue-500 rounded-full mix-blend-screen filter blur-xl floating-element"></div>
                <div className="absolute top-1/2 right-1/4 w-40 h-40 bg-gradient-to-r from-purple-400 to-pink-500 rounded-full mix-blend-screen filter blur-xl floating-element"></div>
                <div className="absolute bottom-1/4 left-1/3 w-24 h-24 bg-gradient-to-r from-green-400 to-cyan-500 rounded-full mix-blend-screen filter blur-xl floating-element"></div>
                <div className="absolute top-3/4 right-1/3 w-28 h-28 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-full mix-blend-screen filter blur-xl floating-element"></div>
            </div>            <div className="container mx-auto px-6 text-center relative z-10">
                <h1 className="text-4xl md:text-6xl font-extrabold leading-tight drop-shadow-lg fade-in-up" style={{animationDelay: '0.2s'}}>
                    <span className="gradient-text">Code, Collaborate, Conquer.</span>
                </h1>
                <p className="mt-6 text-lg md:text-xl text-gray-300 max-w-3xl mx-auto drop-shadow-md fade-in-up" style={{animationDelay: '0.4s'}}>
                    Welcome to <strong>Turing Community</strong> - where students come together to solve coding challenges, 
                    build amazing projects, and grow their programming skills in a supportive Discord environment powered by our custom bot.
                </p>
                <div className="mt-8 flex flex-col sm:flex-row justify-center gap-4 fade-in-up" style={{animationDelay: '0.6s'}}>
                    <a href="https://discord.gg/your-invite-link" target="_blank" rel="noopener noreferrer" className="bg-gradient-to-r from-cyan-500 to-blue-600 hover:from-cyan-600 hover:to-blue-700 text-white font-bold py-3 px-8 rounded-lg transition-all duration-300 transform hover:scale-105 shadow-lg shadow-cyan-500/20 flex items-center justify-center gap-2 glow-on-hover pulse-slow">
                        <DiscordIcon className="w-5 h-5" />
                        Join our Discord
                    </a>
                    <a href="#challenges" className="bg-gray-700 hover:bg-gray-600 text-white font-bold py-3 px-8 rounded-lg transition-all duration-300 transform hover:scale-105 shadow-lg">
                        View Challenges
                    </a>
                </div>
                
                <div className="mt-12 grid grid-cols-2 md:grid-cols-4 gap-6 fade-in-up" style={{animationDelay: '0.8s'}}>
                    <div className="text-center">
                        <div className="text-2xl md:text-3xl font-bold text-cyan-400">500+</div>
                        <div className="text-gray-400 text-sm">Active Members</div>
                    </div>
                    <div className="text-center">
                        <div className="text-2xl md:text-3xl font-bold text-cyan-400">50+</div>
                        <div className="text-gray-400 text-sm">Challenges Solved</div>
                    </div>
                    <div className="text-center">
                        <div className="text-2xl md:text-3xl font-bold text-cyan-400">6</div>
                        <div className="text-gray-400 text-sm">Domains</div>
                    </div>
                    <div className="text-center">
                        <div className="text-2xl md:text-3xl font-bold text-cyan-400">24/7</div>
                        <div className="text-gray-400 text-sm">Community Support</div>
                    </div>
                </div>
            </div>
        </section>
    );
};

const AboutSection = () => {
    const [ref, isVisible] = useScrollAnimation();
    
    const features = [
        { 
            icon: <ShieldCheckIcon className="h-8 w-8 text-cyan-400" />, 
            title: "Community Guidelines", 
            description: "Our community thrives on respect and inclusivity. We maintain a positive environment where everyone can learn and grow together." 
        },
        { 
            icon: <BookOpenIcon className="h-8 w-8 text-cyan-400" />, 
            title: "Curated Resources", 
            description: "Access a wealth of study materials, documentation, and learning resources shared by mentors and experienced members." 
        },
        { 
            icon: <TrophyIcon className="h-8 w-8 text-cyan-400" />, 
            title: "Live Rankings", 
            description: "Track your progress and compete with peers through our dynamic leaderboard system with weekly and monthly rankings." 
        },
        { 
            icon: <CalendarIcon className="h-8 w-8 text-cyan-400" />, 
            title: "Weekly Events", 
            description: "Participate in regular coding challenges, workshops, and community events designed to enhance your skills." 
        },
        { 
            icon: <UsersIcon className="h-8 w-8 text-cyan-400" />, 
            title: "Peer Learning", 
            description: "Collaborate with students from different years and departments, sharing knowledge and learning from each other." 
        },
        { 
            icon: <AwardIcon className="h-8 w-8 text-cyan-400" />, 
            title: "Recognition System", 
            description: "Earn points, unlock achievements, and gain access to exclusive content as you progress through our rank system." 
        }
    ];

    return (
        <AnimatedSection id="about" className="py-20 bg-gray-800/30">
            <div className="container mx-auto px-6">
                <div ref={ref} className={`text-center mb-16 ${isVisible ? 'fade-in-up' : 'opacity-0'}`}>
                    <h2 className="text-3xl md:text-4xl font-bold text-white mb-4">
                        Why Join <span className="gradient-text">Turing Community</span>?
                    </h2>
                    <p className="text-gray-400 text-lg max-w-3xl mx-auto">
                        We're more than just a Discord server. We're a thriving ecosystem of learners, builders, and innovators 
                        working together to push the boundaries of what's possible in technology.
                    </p>
                </div>
                
                <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
                    {features.map((feature, index) => (
                        <div key={index} className={`bg-gray-800/60 backdrop-blur-sm p-6 rounded-lg border border-gray-700/50 hover:border-cyan-400/50 hover:shadow-cyan-500/10 transition-all duration-300 transform hover:scale-[1.02] card-enhanced ${isVisible ? 'pop-in' : 'opacity-0'}`} style={{animationDelay: `${index * 0.1}s`}}>
                            <div className="flex justify-center mb-4">{feature.icon}</div>
                            <h3 className="text-xl font-bold text-white mb-3 text-center">{feature.title}</h3>
                            <p className="text-gray-400 text-center leading-relaxed">{feature.description}</p>
                        </div>
                    ))}
                </div>
            </div>
        </AnimatedSection>
    );
};

const ChallengeSection = () => {
    const [ref, isVisible] = useScrollAnimation();
    
    return (
        <AnimatedSection id="challenges" className="py-20 bg-gray-900">
            <div ref={ref} className={`container mx-auto px-6 ${isVisible ? 'fade-in-up' : 'opacity-0'}`}>
                <div className="text-center mb-12">
                    <h2 className="text-3xl md:text-4xl font-bold text-white mb-4">Weekly Coding Challenges</h2>
                    <p className="text-gray-400 text-lg max-w-2xl mx-auto">
                        Sharpen your skills with our carefully crafted weekly challenges, designed for all skill levels 
                        from beginner to advanced programmers.
                    </p>
                </div>
                
                {/* Current Challenge Highlight */}
                <div className="bg-gradient-to-r from-gray-800/80 to-gray-800/60 backdrop-blur-sm rounded-lg p-8 border border-cyan-500/20 shadow-lg mb-8 transform hover:shadow-cyan-500/30 hover:scale-[1.02] transition-all duration-300 card-enhanced glow-on-hover">
                    <div className="flex flex-col md:flex-row items-start md:items-center justify-between">
                        <div className="flex-1">
                            <div className="flex items-center gap-2 mb-2">
                                <span className="bg-gradient-to-r from-cyan-500 to-blue-600 text-white text-xs font-semibold px-3 py-1 rounded-full">
                                    This Week's Challenge
                                </span>
                                <span className="text-gray-400 text-sm">Deadline: Sunday 11:59 PM</span>
                            </div>
                            <h3 className="text-2xl font-bold text-white mt-2 mb-3">The Algorithmic Maze Runner</h3>
                            <p className="text-gray-400 mb-4 max-w-2xl leading-relaxed">
                                Create an efficient algorithm to find the shortest path through a dynamically generated maze. 
                                Test your problem-solving skills with graph traversal and optimization techniques.
                            </p>
                            <div className="flex flex-wrap gap-2">
                                <span className="bg-purple-500/20 text-purple-300 text-xs px-2 py-1 rounded">Algorithms</span>
                                <span className="bg-blue-500/20 text-blue-300 text-xs px-2 py-1 rounded">Graph Theory</span>
                                <span className="bg-green-500/20 text-green-300 text-xs px-2 py-1 rounded">Medium</span>
                            </div>
                        </div>
                        <div className="mt-6 md:mt-0 md:ml-6 flex-shrink-0">
                            <a href="https://discord.gg/your-invite-link" target="_blank" rel="noopener noreferrer" className="bg-gradient-to-r from-cyan-500 to-blue-600 hover:from-cyan-600 hover:to-blue-700 text-white font-bold py-3 px-6 rounded-lg transition-all duration-300 transform hover:scale-105 flex items-center gap-2">
                                <ZapIcon className="w-4 h-4" />
                                Join Challenge
                            </a>
                        </div>
                    </div>
                </div>
                
                {/* Challenge Process */}
                <div className="grid md:grid-cols-3 gap-6 mb-8">
                    <div className="text-center">
                        <div className="w-12 h-12 bg-gradient-to-br from-cyan-500 to-blue-600 rounded-full flex items-center justify-center mx-auto mb-4">
                            <span className="text-white font-bold">1</span>
                        </div>
                        <h4 className="text-white font-semibold mb-2">Join & Discuss</h4>
                        <p className="text-gray-400 text-sm">Get the problem statement, ask questions, and discuss approaches with the community.</p>
                    </div>
                    <div className="text-center">
                        <div className="w-12 h-12 bg-gradient-to-br from-purple-500 to-pink-600 rounded-full flex items-center justify-center mx-auto mb-4">
                            <span className="text-white font-bold">2</span>
                        </div>
                        <h4 className="text-white font-semibold mb-2">Code & Submit</h4>
                        <p className="text-gray-400 text-sm">Work on your solution and submit via GitHub. Get feedback and help from mentors.</p>
                    </div>
                    <div className="text-center">
                        <div className="w-12 h-12 bg-gradient-to-br from-green-500 to-teal-600 rounded-full flex items-center justify-center mx-auto mb-4">
                            <span className="text-white font-bold">3</span>
                        </div>
                        <h4 className="text-white font-semibold mb-2">Learn & Grow</h4>
                        <p className="text-gray-400 text-sm">Review solutions, earn points, and see your ranking improve on the leaderboard.</p>
                    </div>
                </div>
                
                <div className="text-center">
                    <a href="https://discord.gg/your-invite-link" target="_blank" rel="noopener noreferrer" className="text-cyan-400 hover:text-cyan-300 transition-colors inline-flex items-center gap-1">
                        Explore Past Challenges <span>&rarr;</span>
                    </a>
                </div>
            </div>
        </AnimatedSection>
    );
};

const GamificationSection = () => {
    const [ref, isVisible] = useScrollAnimation();
    
    const ranks = [
        { name: "Newbie", points: "0-200", color: "bg-gray-500", members: "150+" },
        { name: "Junior Member", points: "201-500", color: "bg-green-500", members: "120+" },
        { name: "Coffee Coder", points: "501-1000", color: "bg-yellow-500", members: "80+" },
        { name: "Developer", points: "1000+", color: "bg-red-500", members: "60+" },
        { name: "Superclub", points: "Top 10%", color: "bg-purple-500", members: "25+" }
    ];
    
    const pointSystem = [
        { activity: "Perfect Solution", points: "100", icon: <StarIcon className="inline text-yellow-400 mr-1"/> },
        { activity: "Working Solution", points: "70", icon: <StarIcon className="inline text-yellow-400 mr-1"/> },
        { activity: "Participation", points: "20", icon: <StarIcon className="inline text-yellow-400 mr-1"/> },
        { activity: "Helping Others", points: "+5", icon: <StarIcon className="inline text-yellow-400 mr-1"/> },
        { activity: "Code Reviews", points: "+5", icon: <StarIcon className="inline text-yellow-400 mr-1"/> },
        { activity: "Clean Code", points: "+10", icon: <StarIcon className="inline text-yellow-400 mr-1"/> },
        { activity: "First Submission", points: "+10", icon: <StarIcon className="inline text-yellow-400 mr-1"/> },
        { activity: "Workshop Attendance", points: "+15", icon: <StarIcon className="inline text-yellow-400 mr-1"/> }
    ];
    
    return (
        <AnimatedSection className="py-20 bg-gray-800/30">
            <div ref={ref} className={`container mx-auto px-6 ${isVisible ? 'fade-in-up' : 'opacity-0'}`}>
                <div className="text-center mb-12">
                    <h2 className="text-3xl md:text-4xl font-bold text-white mb-4">
                        <span className="gradient-text">Climb the Ranks</span>
                    </h2>
                    <p className="text-gray-400 text-lg max-w-2xl mx-auto">
                        Earn points, unlock new roles, and gain access to exclusive content and workshops 
                        as you progress through our gamified learning system.
                    </p>
                </div>
                
                {/* Rank Visualization */}
                <div className="flex flex-wrap justify-center items-end gap-4 mb-12">
                    {ranks.map((rank, index) => (
                        <div key={index} className="flex flex-col items-center transform hover:-translate-y-2 transition-transform duration-300">
                            <div className={`w-16 md:w-20 rounded-t-lg shadow-lg ${rank.color} flex items-end justify-center pb-2`} style={{ height: `${(index + 1) * 25 + 40}px` }}>
                                <TrophyIcon className="w-6 h-6 text-white" />
                            </div>
                            <div className="bg-gray-700 p-3 rounded-b-lg text-center w-24 md:w-28">
                                <h4 className="font-bold text-white text-xs md:text-sm">{rank.name}</h4>
                                <p className="text-xs text-gray-400">{rank.points} pts</p>
                                <p className="text-xs text-cyan-400">{rank.members}</p>
                            </div>
                        </div>
                    ))}
                </div>
                
                {/* Points System */}
                <div className="bg-gray-800/60 backdrop-blur-sm rounded-lg p-8 max-w-6xl mx-auto border border-gray-700/50">
                    <h3 className="text-2xl font-bold text-white mb-6 text-center">How to Earn Points</h3>
                    <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-gray-300">
                        {pointSystem.map((item, index) => (
                            <div key={index} className="flex items-center justify-between bg-gray-700/50 p-3 rounded-lg">
                                <span className="text-sm">{item.icon}{item.activity}</span>
                                <span className="font-bold text-cyan-400">+{item.points}</span>
                            </div>
                        ))}
                    </div>
                    
                    <div className="mt-6 p-4 bg-gradient-to-r from-cyan-500/10 to-blue-600/10 rounded-lg border border-cyan-500/20">
                        <h4 className="text-cyan-400 font-semibold mb-2">Special Rewards</h4>
                        <ul className="text-gray-300 text-sm space-y-1">
                            <li>• Monthly top 3 performers get special recognition and badges</li>
                            <li>• Higher ranks unlock exclusive workshop access and mentorship opportunities</li>
                            <li>• Superclub members get early access to new challenges and beta features</li>
                            <li>• Certificate generation for active participants and high achievers</li>
                        </ul>
                    </div>
                </div>
            </div>
        </AnimatedSection>
    );
};

const DomainSection = () => {
    const [ref, isVisible] = useScrollAnimation();
    
    const domains = [
        { 
            name: "Data Science & AI", 
            description: "Dive into machine learning, data analysis, neural networks, and artificial intelligence projects.",
            icon: "🤖",
            skills: ["Python", "TensorFlow", "Pandas", "Scikit-learn"]
        },
        { 
            name: "Full Stack Development", 
            description: "Master both front-end and back-end technologies to build complete web applications.",
            icon: "🌐",
            skills: ["React", "Node.js", "MongoDB", "Express"]
        },
        { 
            name: "Cloud & DevOps", 
            description: "Explore cloud platforms, containerization, CI/CD pipelines, and infrastructure management.",
            icon: "☁️",
            skills: ["AWS", "Docker", "Kubernetes", "Jenkins"]
        },
        { 
            name: "Mobile Development", 
            description: "Create native and cross-platform mobile applications for iOS and Android.",
            icon: "📱",
            skills: ["React Native", "Flutter", "Swift", "Kotlin"]
        },
        { 
            name: "UI/UX Design", 
            description: "Focus on creating beautiful, intuitive, and user-centered design experiences.",
            icon: "🎨",
            skills: ["Figma", "Adobe XD", "Prototyping", "User Research"]
        },
        { 
            name: "Competitive Programming", 
            description: "Hone your algorithmic thinking and problem-solving skills for coding competitions.",
            icon: "🏆",
            skills: ["Algorithms", "Data Structures", "Mathematics", "Optimization"]
        },
    ];
    
    return (
        <AnimatedSection id="domains" className="py-20 bg-gray-900">
            <div ref={ref} className={`container mx-auto px-6 ${isVisible ? 'fade-in-up' : 'opacity-0'}`}>
                <div className="text-center mb-12">
                    <h2 className="text-3xl md:text-4xl font-bold text-white mb-4">
                        Explore Your <span className="gradient-text">Interests</span>
                    </h2>
                    <p className="text-gray-400 text-lg max-w-2xl mx-auto">
                        Connect with peers and mentors in specialized domains. Each domain has dedicated 
                        spaces for learning, sharing, and collaborating on domain-specific projects.
                    </p>
                </div>
                
                <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
                    {domains.map((domain, index) => (
                        <div key={index} className={`bg-gray-800/60 backdrop-blur-sm p-6 rounded-lg border border-gray-700/50 hover:border-cyan-400/50 hover:shadow-cyan-500/10 transition-all duration-300 transform hover:scale-105 card-enhanced ${isVisible ? 'pop-in' : 'opacity-0'}`} style={{animationDelay: `${index * 0.1}s`}}>
                            <div className="text-4xl mb-4 floating-element">{domain.icon}</div>
                            <h3 className="text-xl font-bold text-white mb-3">{domain.name}</h3>
                            <p className="text-gray-400 mb-4 leading-relaxed">{domain.description}</p>
                            <div className="flex flex-wrap gap-2">
                                {domain.skills.map((skill, skillIndex) => (
                                    <span key={skillIndex} className="bg-cyan-500/20 text-cyan-300 text-xs px-2 py-1 rounded hover:bg-cyan-500/30 transition-colors">
                                        {skill}
                                    </span>
                                ))}
                            </div>
                        </div>
                    ))}
                </div>
                
                <div className="text-center mt-12">
                    <a href="https://discord.gg/your-invite-link" target="_blank" rel="noopener noreferrer" className="bg-gradient-to-r from-cyan-500 to-blue-600 hover:from-cyan-600 hover:to-blue-700 text-white font-bold py-3 px-8 rounded-lg transition-all duration-300 transform hover:scale-105 inline-flex items-center gap-2">
                        <DiscordIcon className="w-5 h-5" />
                        Join Your Domain
                    </a>
                </div>
            </div>
        </AnimatedSection>
    );
};

const CommunitySection = () => {
    const [ref, isVisible] = useScrollAnimation();
    
    const communityFeatures = [
        { 
            icon: <ZapIcon className="h-8 w-8 text-cyan-400"/>, 
            title: "Project Showcase", 
            description: "Share your personal projects, get constructive feedback, and discover what amazing things other members are building.",
            highlight: "50+ projects shared monthly"
        },
        { 
            icon: <UsersIcon className="h-8 w-8 text-cyan-400"/>, 
            title: "Career Guidance", 
            description: "Find job and internship opportunities, get resume reviews, and receive career advice from experienced mentors and alumni.",
            highlight: "15+ job placements this year"
        },
        { 
            icon: <GithubIcon className="h-8 w-8 text-cyan-400"/>, 
            title: "Portfolio Reviews", 
            description: "Polish your GitHub profile and portfolio with detailed feedback from mentors and peers to stand out to recruiters.",
            highlight: "Weekly review sessions"
        },
    ];
    
    return (
        <AnimatedSection id="community" className="py-20 bg-gray-800/30">
            <div ref={ref} className={`container mx-auto px-6 ${isVisible ? 'fade-in-up' : 'opacity-0'}`}>
                <div className="text-center mb-12">
                    <h2 className="text-3xl md:text-4xl font-bold text-white mb-4">
                        More Than Just <span className="gradient-text">Code</span>
                    </h2>
                    <p className="text-gray-400 text-lg max-w-2xl mx-auto">
                        Our community extends beyond coding challenges. We foster personal growth, 
                        career development, and meaningful connections that last beyond college.
                    </p>
                </div>
                
                <div className="grid md:grid-cols-3 gap-8 mb-12">
                    {communityFeatures.map((feature, index) => (
                        <div key={index} className={`bg-gray-800/60 backdrop-blur-sm p-6 rounded-lg border border-gray-700/50 hover:border-cyan-400/50 hover:shadow-cyan-500/10 transition-all duration-300 transform hover:-translate-y-2 ${isVisible ? 'pop-in' : 'opacity-0'}`} style={{animationDelay: `${index * 0.2}s`}}>
                            <div className="flex justify-center mb-4">{feature.icon}</div>
                            <h3 className="text-xl font-bold text-white mb-3 text-center">{feature.title}</h3>
                            <p className="text-gray-400 text-center mb-4 leading-relaxed">{feature.description}</p>
                            <div className="text-center">
                                <span className="bg-gradient-to-r from-cyan-500 to-blue-600 text-white text-xs font-semibold px-3 py-1 rounded-full">
                                    {feature.highlight}
                                </span>
                            </div>
                        </div>
                    ))}
                </div>
                
                {/* Community Stats */}
                <div className="bg-gradient-to-r from-gray-800/80 to-gray-800/60 backdrop-blur-sm rounded-lg p-8 border border-cyan-500/20">
                    <h3 className="text-2xl font-bold text-white mb-6 text-center">Community Impact</h3>
                    <div className="grid grid-cols-2 md:grid-cols-4 gap-6 text-center">
                        <div>
                            <div className="text-2xl md:text-3xl font-bold text-cyan-400 mb-1">500+</div>
                            <div className="text-gray-400 text-sm">Active Members</div>
                        </div>
                        <div>
                            <div className="text-2xl md:text-3xl font-bold text-purple-400 mb-1">200+</div>
                            <div className="text-gray-400 text-sm">Projects Completed</div>
                        </div>
                        <div>
                            <div className="text-2xl md:text-3xl font-bold text-green-400 mb-1">50+</div>
                            <div className="text-gray-400 text-sm">Job Placements</div>
                        </div>
                        <div>
                            <div className="text-2xl md:text-3xl font-bold text-yellow-400 mb-1">95%</div>
                            <div className="text-gray-400 text-sm">Member Satisfaction</div>
                        </div>
                    </div>
                </div>
            </div>
        </AnimatedSection>
    );
};

const TeamSection = () => {
    const [ref, isVisible] = useScrollAnimation();
    
    const team = [
        { 
            name: "Nirupam Sharma", 
            role: "Community Lead", 
            avatar: `https://ui-avatars.com/api/?name=Nirupam+Sharma&background=06b6d4&color=fff&size=120`,
            description: "Passionate about building inclusive tech communities and fostering collaborative learning environments."
        },
        { 
            name: "Sarah Johnson", 
            role: "Senior Mentor (AI/ML)", 
            avatar: `https://ui-avatars.com/api/?name=Sarah+Johnson&background=8b5cf6&color=fff&size=120`,
            description: "3rd year CS student specializing in machine learning and data science projects."
        },
        { 
            name: "Alex Chen", 
            role: "Senior Mentor (Full Stack)", 
            avatar: `https://ui-avatars.com/api/?name=Alex+Chen&background=10b981&color=fff&size=120`,
            description: "Full-stack developer with expertise in modern web technologies and cloud platforms."
        },
        { 
            name: "Priya Patel", 
            role: "Event Coordinator", 
            avatar: `https://ui-avatars.com/api/?name=Priya+Patel&background=f59e0b&color=fff&size=120`,
            description: "Organizes workshops, hackathons, and community events to keep everyone engaged and learning."
        },
    ];
    
    return (
        <AnimatedSection id="team" className="py-20 bg-gray-900">
            <div ref={ref} className={`container mx-auto px-6 ${isVisible ? 'fade-in-up' : 'opacity-0'}`}>
                <div className="text-center mb-12">
                    <h2 className="text-3xl md:text-4xl font-bold text-white mb-4">
                        Meet the <span className="gradient-text">Team</span>
                    </h2>
                    <p className="text-gray-400 text-lg max-w-2xl mx-auto">
                        The passionate individuals dedicated to making this community a thriving space for learning, 
                        growth, and collaboration.
                    </p>
                </div>
                
                <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
                    {team.map((member, index) => (
                        <div key={index} className={`text-center transform hover:scale-105 transition-all duration-300 ${isVisible ? 'pop-in' : 'opacity-0'}`} style={{animationDelay: `${index * 0.1}s`}}>
                            <div className="relative mb-6">
                                <img 
                                    src={member.avatar} 
                                    alt={member.name} 
                                    className="w-24 h-24 rounded-full mx-auto border-4 border-cyan-400 shadow-lg" 
                                />
                                <div className="absolute -bottom-2 left-1/2 transform -translate-x-1/2 bg-gradient-to-r from-cyan-500 to-blue-600 text-white text-xs px-2 py-1 rounded-full">
                                    Active
                                </div>
                            </div>
                            <h4 className="text-lg font-bold text-white mb-1">{member.name}</h4>
                            <p className="text-cyan-400 font-medium mb-3">{member.role}</p>
                            <p className="text-gray-400 text-sm leading-relaxed">{member.description}</p>
                        </div>
                    ))}
                </div>
                
                <div className="text-center mt-12">
                    <div className="bg-gray-800/60 backdrop-blur-sm rounded-lg p-6 max-w-2xl mx-auto border border-gray-700/50">
                        <h3 className="text-xl font-bold text-white mb-3">Want to Join Our Team?</h3>
                        <p className="text-gray-400 mb-4">
                            We're always looking for passionate mentors and organizers to help grow our community.
                        </p>
                        <a href="https://discord.gg/your-invite-link" target="_blank" rel="noopener noreferrer" className="text-cyan-400 hover:text-cyan-300 transition-colors">
                            Apply to become a mentor →
                        </a>
                    </div>
                </div>
            </div>
        </AnimatedSection>
    );
};

const BotSection = () => {
    const [ref, isVisible] = useScrollAnimation();
    
    const botFeatures = [
        {
            icon: <ZapIcon className="h-8 w-8 text-cyan-400" />,
            title: "Challenge Management",
            description: "Automatically posts weekly challenges, tracks submissions, and manages deadlines."
        },
        {
            icon: <TrophyIcon className="h-8 w-8 text-cyan-400" />,
            title: "Points & Rankings",
            description: "Real-time leaderboard updates, point calculations, and automatic rank promotions."
        },
        {
            icon: <ShieldCheckIcon className="h-8 w-8 text-cyan-400" />,
            title: "Moderation Tools",
            description: "Smart moderation features to maintain community guidelines and positive environment."
        },
        {
            icon: <BookOpenIcon className="h-8 w-8 text-cyan-400" />,
            title: "Resource Library",
            description: "Curated study materials, documentation links, and learning resources at your fingertips."
        }
    ];
    
    return (
        <AnimatedSection className="py-20 bg-gray-800/30">
            <div ref={ref} className={`container mx-auto px-6 ${isVisible ? 'fade-in-up' : 'opacity-0'}`}>
                <div className="text-center mb-12">
                    <h2 className="text-3xl md:text-4xl font-bold text-white mb-4">
                        Meet Our <span className="gradient-text">Discord Bot</span>
                    </h2>
                    <p className="text-gray-400 text-lg max-w-2xl mx-auto">
                        Our custom-built Discord bot powers the entire community experience with automated 
                        features, gamification, and seamless integration.
                    </p>
                </div>
                
                <div className="grid md:grid-cols-2 gap-8 mb-12">
                    <div className="bg-gradient-to-br from-gray-800/80 to-gray-900/80 backdrop-blur-sm rounded-lg p-8 border border-cyan-500/20">
                        <div className="flex items-center gap-4 mb-6">
                            <div className="w-16 h-16 bg-gradient-to-br from-cyan-500 to-blue-600 rounded-full flex items-center justify-center">
                                <BotIcon className="w-8 h-8 text-white" />
                            </div>
                            <div>
                                <h3 className="text-2xl font-bold text-white">TuringBot</h3>
                                <p className="text-cyan-400 font-medium">Community Assistant</p>
                            </div>
                        </div>
                        <p className="text-gray-300 mb-6 leading-relaxed">
                            Our intelligent Discord bot that manages challenges, tracks progress, 
                            maintains leaderboards, and helps create an engaging learning environment 
                            for all community members.
                        </p>
                        <div className="flex gap-4">
                            <a href="/bot" target="_blank" rel="noopener noreferrer" className="bg-gradient-to-r from-cyan-500 to-blue-600 hover:from-cyan-600 hover:to-blue-700 text-white font-bold py-3 px-6 rounded-lg transition-all duration-300 transform hover:scale-105 flex items-center gap-2">
                                <BotIcon className="w-4 h-4" />
                                Bot Documentation
                            </a>
                            <a href="https://discord.gg/your-invite-link" target="_blank" rel="noopener noreferrer" className="bg-gray-700 hover:bg-gray-600 text-white font-bold py-3 px-6 rounded-lg transition-all duration-300 transform hover:scale-105">
                                Try in Discord
                            </a>
                        </div>
                    </div>
                    
                    <div className="grid grid-cols-2 gap-4">
                        {botFeatures.map((feature, index) => (
                            <div key={index} className={`bg-gray-800/60 backdrop-blur-sm p-4 rounded-lg border border-gray-700/50 hover:border-cyan-400/50 transition-all duration-300 ${isVisible ? 'pop-in' : 'opacity-0'}`} style={{animationDelay: `${index * 0.1}s`}}>
                                <div className="flex justify-center mb-3">{feature.icon}</div>
                                <h4 className="text-white font-semibold mb-2 text-center text-sm">{feature.title}</h4>
                                <p className="text-gray-400 text-xs text-center leading-relaxed">{feature.description}</p>
                            </div>
                        ))}
                    </div>
                </div>
                
                {/* Bot Commands Preview */}
                <div className="bg-gray-800/60 backdrop-blur-sm rounded-lg p-6 border border-gray-700/50">
                    <h3 className="text-xl font-bold text-white mb-4 text-center">Quick Commands</h3>
                    <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-center">
                        <div className="bg-gray-700/50 p-3 rounded-lg">
                            <code className="text-cyan-400 font-mono text-sm">/challenge</code>
                            <p className="text-gray-400 text-xs mt-1">View current challenge</p>
                        </div>
                        <div className="bg-gray-700/50 p-3 rounded-lg">
                            <code className="text-cyan-400 font-mono text-sm">/leaderboard</code>
                            <p className="text-gray-400 text-xs mt-1">Check rankings</p>
                        </div>
                        <div className="bg-gray-700/50 p-3 rounded-lg">
                            <code className="text-cyan-400 font-mono text-sm">/profile</code>
                            <p className="text-gray-400 text-xs mt-1">View your stats</p>
                        </div>
                        <div className="bg-gray-700/50 p-3 rounded-lg">
                            <code className="text-cyan-400 font-mono text-sm">/help</code>
                            <p className="text-gray-400 text-xs mt-1">Get assistance</p>
                        </div>
                    </div>
                </div>
            </div>
        </AnimatedSection>
    );
};

const JoinSection = () => {
    const [ref, isVisible] = useScrollAnimation();
    
    return (
        <AnimatedSection className="py-20 bg-gradient-to-r from-gray-800/50 to-gray-900/50">
            <div ref={ref} className={`container mx-auto px-6 text-center ${isVisible ? 'fade-in-up' : 'opacity-0'}`}>
                <div className="max-w-3xl mx-auto">
                    <h2 className="text-3xl md:text-5xl font-bold text-white mb-6">
                        Ready to Start Your <span className="gradient-text">Journey</span>?
                    </h2>
                    <p className="text-gray-300 text-lg mb-8 leading-relaxed">
                        Join hundreds of students who are already coding, learning, and growing together. 
                        Your programming adventure starts with a single click.
                    </p>
                    
                    <div className="flex flex-col sm:flex-row gap-4 justify-center mb-8">
                        <a href="https://discord.gg/your-invite-link" target="_blank" rel="noopener noreferrer" className="bg-gradient-to-r from-cyan-500 to-blue-600 hover:from-cyan-600 hover:to-blue-700 text-white font-bold py-4 px-8 rounded-lg transition-all duration-300 transform hover:scale-105 shadow-lg flex items-center justify-center gap-2 text-lg">
                            <DiscordIcon className="w-6 h-6" />
                            Join Discord Community
                        </a>
                        <a href="#about" className="bg-transparent border-2 border-cyan-500 text-cyan-400 hover:bg-cyan-500 hover:text-white font-bold py-4 px-8 rounded-lg transition-all duration-300 transform hover:scale-105 text-lg">
                            Learn More
                        </a>
                    </div>
                    
                    <div className="text-gray-400 text-sm">
                        🔓 Free forever • 🎓 Student-focused • 🚀 Active daily
                    </div>
                </div>
            </div>
        </AnimatedSection>
    );
};
